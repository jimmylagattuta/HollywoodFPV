{"version":3,"file":"static/js/393.79e64485.chunk.js","mappings":"2JAGA,MA2DA,EA3DsBA,IAAkB,IAAjB,QAAEC,GAASD,EAChC,MAAOE,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,OAC1CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,MA4BnC,OA1BAO,EAAAA,EAAAA,YAAU,KACR,IAAKV,EAGH,OAFAS,EAAS,gCACTE,QAAQH,MAAM,yCAIhBG,QAAQC,IAAI,iCAAiCZ,KAExBa,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,4BAA4BhB,KAC7DW,QAAQC,IAAI,+BAAgCE,EAASG,MAErDf,EAAWY,EAASG,KAAKhB,SAAW,IACpCI,EAAUS,EAASG,KAAKb,QACxBG,EAAgBO,EAASG,KAAKC,cAChC,CAAE,MAAOC,GAAM,IAADC,EACZX,EAAS,kCACTE,QAAQH,MAAM,kCAA8C,QAAZY,EAAAD,EAAIL,gBAAQ,IAAAM,OAAA,EAAZA,EAAcH,OAAQE,EAAIE,QAC5E,GAGFC,EAAc,GACb,CAACtB,KAGFuB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHhB,IAASiB,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAEC,MAAO,OAAQH,SAAEhB,IACtCJ,IACCmB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAAwB,IAAEpB,EAAO,YAAKE,EAAa,gBAG/DmB,EAAAA,EAAAA,KAAA,MAAAD,SACGvB,EAAQ2B,OAAS,EAChB3B,EAAQ4B,KAAI,CAACC,EAAQC,KACnBR,EAAAA,EAAAA,MAAA,MAAgBG,MAAO,CAAEM,aAAc,OAAQC,UAAW,OAAQC,QAAS,OAAQC,aAAc,kBAAmBX,SAAA,EAClHD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASM,EAAOM,cAAqB,KAAGN,EAAO1B,OAAO,eAExDqB,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAOO,SAJJN,MAQXN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAGH,C","sources":["components/GoogleReviews.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GoogleReviews = ({ placeId }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [rating, setRating] = useState(null);\r\n  const [totalRatings, setTotalRatings] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!placeId) {\r\n      setError(\"Error: Missing placeId.\");\r\n      console.error(\"GoogleReviews Error: Missing placeId.\");\r\n      return;\r\n    }\r\n\r\n    console.log(`Fetching reviews for placeId: ${placeId}`);\r\n\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(`/google_reviews?place_id=${placeId}`);\r\n        console.log(\"Google Reviews API Response:\", response.data);\r\n\r\n        setReviews(response.data.reviews || []);\r\n        setRating(response.data.rating);\r\n        setTotalRatings(response.data.total_ratings);\r\n      } catch (err) {\r\n        setError(\"Failed to load Google reviews.\");\r\n        console.error(\"Error fetching Google Reviews:\", err.response?.data || err.message);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [placeId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Google Reviews</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {rating && (\r\n        <p>\r\n          <strong>Average Rating:</strong> {rating} ⭐ ({totalRatings} reviews)\r\n        </p>\r\n      )}\r\n      <ul>\r\n        {reviews.length > 0 ? (\r\n          reviews.map((review, index) => (\r\n            <li key={index} style={{ marginBottom: \"15px\", listStyle: \"none\", padding: \"10px\", borderBottom: \"1px solid #ddd\" }}>\r\n              <p>\r\n                <strong>{review.author_name}</strong> ({review.rating} ★)\r\n              </p>\r\n              <p>{review.text}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No reviews available.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleReviews;\r\n"],"names":["_ref","placeId","reviews","setReviews","useState","rating","setRating","totalRatings","setTotalRatings","error","setError","useEffect","console","log","async","response","axios","get","data","total_ratings","err","_err$response","message","fetchReviews","_jsxs","children","_jsx","style","color","length","map","review","index","marginBottom","listStyle","padding","borderBottom","author_name","text"],"sourceRoot":""}