{"version":3,"file":"static/js/393.34ee5aa1.chunk.js","mappings":"2JAGA,MAuEA,EAvEsBA,IAAkB,IAAjB,QAAEC,GAASD,EAChC,MAAOE,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,OAC1CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,MAwCnC,OAtCAO,EAAAA,EAAAA,YAAU,KACR,IAAKV,EAGH,OAFAW,QAAQH,MAAM,8CACdC,EAAS,2BAIXE,QAAQC,IAAI,iCAAiCZ,KAExBa,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,4BAA4BhB,KAG7D,GAFAW,QAAQC,IAAI,+BAAgCE,EAASG,MAEjDH,EAASG,KAAKT,MAGhB,OAFAG,QAAQH,MAAM,4BAA6BM,EAASG,KAAKT,YACzDC,EAASK,EAASG,KAAKT,OAIzB,MAAMU,EAAiBJ,EAASG,KAAKhB,SAAW,GAChDC,EAAWgB,GACXb,EAAUS,EAASG,KAAKb,QACxBG,EAAgBO,EAASG,KAAKE,eAEA,IAA1BD,EAAeE,QACjBT,QAAQU,KAAK,uCAEjB,CAAE,MAAOC,GAAM,IAADC,EACZZ,QAAQH,MAAM,kCAA8C,QAAZe,EAAAD,EAAIR,gBAAQ,IAAAS,OAAA,EAAZA,EAAcN,OAAQK,EAAIE,SAC1Ef,EAAS,iCACX,GAGFgB,EAAc,GACb,CAACzB,IAGAQ,GAAUP,GAA8B,IAAnBA,EAAQmB,QAC/BT,QAAQU,KAAK,4DACN,OAIPK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHvB,IACCsB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAAwB,IAAEvB,EAAO,YAAKE,EAAa,gBAG/DsB,EAAAA,EAAAA,KAAA,MAAAD,SACG1B,EAAQ4B,KAAI,CAACC,EAAQC,KACpBL,EAAAA,EAAAA,MAAA,MAAgBM,MAAO,CAAEC,aAAc,OAAQC,UAAW,OAAQC,QAAS,OAAQC,aAAc,kBAAmBT,SAAA,EAClHD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASG,EAAOO,cAAqB,KAAGP,EAAO1B,OAAO,eAExDwB,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAOQ,SAJJP,SAQT,C","sources":["components/GoogleReviews.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GoogleReviews = ({ placeId }) => {\r\n  const [reviews, setReviews] = useState(null); // Start as null\r\n  const [rating, setRating] = useState(null);\r\n  const [totalRatings, setTotalRatings] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!placeId) {\r\n      console.error(\"GoogleReviews Error: Missing placeId.\");\r\n      setError(\"Error: Missing placeId.\");\r\n      return;\r\n    }\r\n\r\n    console.log(`Fetching reviews for placeId: ${placeId}`);\r\n\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(`/google_reviews?place_id=${placeId}`);\r\n        console.log(\"Google Reviews API Response:\", response.data);\r\n\r\n        if (response.data.error) {\r\n          console.error(\"Google Reviews API Error:\", response.data.error);\r\n          setError(response.data.error);\r\n          return;\r\n        }\r\n\r\n        const fetchedReviews = response.data.reviews || [];\r\n        setReviews(fetchedReviews);\r\n        setRating(response.data.rating);\r\n        setTotalRatings(response.data.total_ratings);\r\n\r\n        if (fetchedReviews.length === 0) {\r\n          console.warn(\"GoogleReviews: No reviews available.\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching Google Reviews:\", err.response?.data || err.message);\r\n        setError(\"Failed to load Google reviews.\");\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [placeId]);\r\n\r\n  // ✅ If error exists OR reviews are empty, return null (do not render anything)\r\n  if (error || (reviews && reviews.length === 0)) {\r\n    console.warn(\"GoogleReviews Component Hidden: No reviews or API Error.\");\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Google Reviews</h2>\r\n      {rating && (\r\n        <p>\r\n          <strong>Average Rating:</strong> {rating} ⭐ ({totalRatings} reviews)\r\n        </p>\r\n      )}\r\n      <ul>\r\n        {reviews.map((review, index) => (\r\n          <li key={index} style={{ marginBottom: \"15px\", listStyle: \"none\", padding: \"10px\", borderBottom: \"1px solid #ddd\" }}>\r\n            <p>\r\n              <strong>{review.author_name}</strong> ({review.rating} ★)\r\n            </p>\r\n            <p>{review.text}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleReviews;\r\n"],"names":["_ref","placeId","reviews","setReviews","useState","rating","setRating","totalRatings","setTotalRatings","error","setError","useEffect","console","log","async","response","axios","get","data","fetchedReviews","total_ratings","length","warn","err","_err$response","message","fetchReviews","_jsxs","children","_jsx","map","review","index","style","marginBottom","listStyle","padding","borderBottom","author_name","text"],"sourceRoot":""}