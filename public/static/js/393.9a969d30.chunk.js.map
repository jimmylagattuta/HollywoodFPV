{"version":3,"file":"static/js/393.9a969d30.chunk.js","mappings":"2JAGA,MAiDA,EAjDsBA,IAAkB,IAAjB,QAAEC,GAASD,EAChC,MAAOE,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,OAC1CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,MAkBnC,OAhBAO,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,4BAA4Bd,KAC7DE,EAAWU,EAASG,KAAKd,SAAW,IACpCI,EAAUO,EAASG,KAAKX,QACxBG,EAAgBK,EAASG,KAAKC,cAChC,CAAE,MAAOC,GACPR,EAAS,kCACTS,QAAQV,MAAM,iCAAkCS,EAClD,GAGFE,EAAc,GACb,CAACnB,KAGFoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHb,IAASc,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAEC,MAAO,OAAQH,SAAEb,IACtCJ,IACCgB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAAwB,IAAEjB,EAAO,YAAKE,EAAa,gBAG/DgB,EAAAA,EAAAA,KAAA,MAAAD,SACGpB,EAAQwB,OAAS,EAChBxB,EAAQyB,KAAI,CAACC,EAAQC,KACnBR,EAAAA,EAAAA,MAAA,MAAgBG,MAAO,CAAEM,aAAc,OAAQC,UAAW,QAAST,SAAA,EACjED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASM,EAAOI,cAAqB,KAAGJ,EAAOvB,OAAO,eAExDkB,EAAAA,EAAAA,KAAA,KAAAD,SAAIM,EAAOK,SAJJJ,MAQXN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAGH,C","sources":["components/GoogleReviews.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GoogleReviews = ({ placeId }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [rating, setRating] = useState(null);\r\n  const [totalRatings, setTotalRatings] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(`/google_reviews?place_id=${placeId}`);\r\n        setReviews(response.data.reviews || []);\r\n        setRating(response.data.rating);\r\n        setTotalRatings(response.data.total_ratings);\r\n      } catch (err) {\r\n        setError(\"Failed to load Google reviews.\");\r\n        console.error(\"Error fetching Google Reviews:\", err);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [placeId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Google Reviews</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      {rating && (\r\n        <p>\r\n          <strong>Average Rating:</strong> {rating} ⭐ ({totalRatings} reviews)\r\n        </p>\r\n      )}\r\n      <ul>\r\n        {reviews.length > 0 ? (\r\n          reviews.map((review, index) => (\r\n            <li key={index} style={{ marginBottom: \"15px\", listStyle: \"none\" }}>\r\n              <p>\r\n                <strong>{review.author_name}</strong> ({review.rating} ★)\r\n              </p>\r\n              <p>{review.text}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No reviews available.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleReviews;"],"names":["_ref","placeId","reviews","setReviews","useState","rating","setRating","totalRatings","setTotalRatings","error","setError","useEffect","async","response","axios","get","data","total_ratings","err","console","fetchReviews","_jsxs","children","_jsx","style","color","length","map","review","index","marginBottom","listStyle","author_name","text"],"sourceRoot":""}