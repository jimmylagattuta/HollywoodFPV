{"version":3,"file":"static/js/393.3b55fe66.chunk.js","mappings":"2JAGA,MAkDA,EAlDsBA,IAAkB,IAAjB,QAAEC,GAASD,EAChC,MAAOE,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,OAC1CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,MAoBnC,OAlBAO,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,4BAA4Bd,KAE7DE,EAAWU,EAASG,KAAKd,SAAW,IACpCI,EAAUO,EAASG,KAAKX,QACxBG,EAAgBK,EAASG,KAAKC,cAChC,CAAE,MAAOC,GACPR,EAAS,kCACTS,QAAQV,MAAM,iCAAkCS,EAClD,GAGFE,EAAc,GACb,CAACnB,IAGAQ,GAA6B,IAAnBP,EAAQmB,SAAiBhB,EAC9B,MAIPiB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACHlB,IACCiB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBAAwB,IAAElB,EAAO,YAAKE,EAAa,gBAG/DiB,EAAAA,EAAAA,KAAA,MAAAD,SACGrB,EAAQuB,KAAI,CAACC,EAAQC,KACpBL,EAAAA,EAAAA,MAAA,MAAgBM,MAAO,CAAEC,aAAc,OAAQC,UAAW,QAASP,SAAA,EACjED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAASG,EAAOK,cAAqB,KAAGL,EAAOrB,OAAO,eAExDmB,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAOM,SAJJL,SAQT,C","sources":["components/GoogleReviews.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GoogleReviews = ({ placeId }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [rating, setRating] = useState(null);\r\n  const [totalRatings, setTotalRatings] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(`/google_reviews?place_id=${placeId}`);\r\n        // Assuming the API returns an object with keys: rating, total_ratings, reviews\r\n        setReviews(response.data.reviews || []);\r\n        setRating(response.data.rating);\r\n        setTotalRatings(response.data.total_ratings);\r\n      } catch (err) {\r\n        setError(\"Failed to load Google reviews.\");\r\n        console.error(\"Error fetching Google Reviews:\", err);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [placeId]);\r\n\r\n  // Hide the component if there's an error or if there are no reviews and no rating\r\n  if (error || (reviews.length === 0 && !rating)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Google Reviews</h2>\r\n      {rating && (\r\n        <p>\r\n          <strong>Average Rating:</strong> {rating} ⭐ ({totalRatings} reviews)\r\n        </p>\r\n      )}\r\n      <ul>\r\n        {reviews.map((review, index) => (\r\n          <li key={index} style={{ marginBottom: \"15px\", listStyle: \"none\" }}>\r\n            <p>\r\n              <strong>{review.author_name}</strong> ({review.rating} ★)\r\n            </p>\r\n            <p>{review.text}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleReviews;\r\n"],"names":["_ref","placeId","reviews","setReviews","useState","rating","setRating","totalRatings","setTotalRatings","error","setError","useEffect","async","response","axios","get","data","total_ratings","err","console","fetchReviews","length","_jsxs","children","_jsx","map","review","index","style","marginBottom","listStyle","author_name","text"],"sourceRoot":""}